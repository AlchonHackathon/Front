{"ast":null,"code":"var _jsxFileName = \"/Users/fawwazhaziq/Downloads/SEProject-v3/SEProject/frontend/src/components/Mail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, Children } from 'react';\nimport axios from 'axios';\nimport MailEntry from './MailEntry';\nimport MailPopUp from './MailPopUp';\nimport './styling/Mail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validateInput = mailData => {\n  const {\n    recId,\n    title,\n    content\n  } = mailData;\n  if (!recId || !title || !content) {\n    return 'All fields are required';\n  }\n  const idPattern = /^[0-9]+$/;\n  if (!idPattern.test(recId)) {\n    return 'Recipient ID should contain only digits';\n  }\n  return null;\n};\nconst Mail = () => {\n  _s();\n  const token = localStorage.getItem('token');\n  const headers = {};\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  const MAIL_URL = '/api/mail';\n  const fixedRecID = \"2000313287\";\n  const initialState = {\n    recId: fixedRecID,\n    title: '',\n    content: ''\n  };\n  const [createdMail, setCreatedMail] = useState(initialState);\n  const [incomingMail, setIncomingMail] = useState([]);\n  const [sentMail, setSentMail] = useState([]);\n  const [curMail, setCurMail] = useState({});\n  const [curMailType, setCurMailType] = useState('');\n  const [isMailPopUpVisible, setMailPopUpVisible] = useState(false);\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchMail = async mailType => {\n      try {\n        const response = await axios.get(`${MAIL_URL}/${mailType}`, {\n          signal: controller.signal,\n          headers: headers\n        });\n        //console.log(`${mailType} mail retrieved : ${response.data.mail}`);\n        if (mailType === 'incoming') {\n          setIncomingMail(response.data.mail);\n        } else {\n          setSentMail(response.data.mail);\n        }\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.error(`Fetch ${mailType} mail request cancelled`);\n        } else {\n          console.error(`Error getting ${mailType} mail:`, error);\n        }\n      }\n    };\n    fetchMail('incoming');\n    fetchMail('sent');\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCreatedMail(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const sendMail = async e => {\n    e.preventDefault();\n    const validationError = validateInput(createdMail);\n    if (validationError) {\n      alert(validationError);\n      return;\n    }\n    try {\n      const response = await axios.post(`${MAIL_URL}`, createdMail, {\n        headers: headers\n      });\n      console.log('Mail sent: ', response.data);\n      alert('Mail sent');\n      // document.getElementById('MailOverlay').style.display = 'block';\n      // document.getElementById('mailSentMessage').style.display = 'block';\n      setCreatedMail(initialState);\n    } catch (error) {\n      console.error('Error sending mail: ', error);\n      alert('Failed to send mail: ' + error.message);\n    }\n  };\n  const viewMail = (mail, mailType) => {\n    setCurMail(mail);\n    setCurMailType(mailType);\n    setMailPopUpVisible(true);\n  };\n  const closeMail = () => {\n    setMailPopUpVisible(false);\n    const readMail = async () => {\n      try {\n        const response = await axios.put(`${MAIL_URL}/${curMail._id}`, {\n          isRead: true\n        }, {\n          headers: headers\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.log('Failed to update read status of mail: ' + error);\n      }\n    };\n    if (curMailType === 'incoming' && !curMail.isRead) {\n      readMail();\n      setCurMail(prevState => ({\n        ...prevState,\n        isRead: true\n      }));\n    }\n  };\n\n  // function viewMail(mail, mailType){\n  //   if (mailType === 'incoming'){\n  //     document.getElementById('mailDetailsSendRec').textContent = `Sent by ${mail.senderId}`;\n  //   } else {\n  //     document.getElementById('mailDetailsSendRec').textContent = `Sent to ${mail.recId}`;\n  //   }\n\n  //   const formattedDate = formatDate(mail.createdAt);\n  //   document.getElementById('mailDetailsDate').textContent = `Sent on ${formattedDate}`;\n  //   document.getElementById('mailDetailsTitle').textContent = `Title: ${mail.title}`;\n  //   document.getElementById('mailDetailsContent').textContent = mail.content;\n\n  //   document.getElementById('MailOverlay').style.display = 'block';\n  //   document.getElementById('mailDetailsWrapper').style.display = 'block';\n  // }\n\n  // function exitPopUp(){\n  //   document.getElementById('MailOverlay').style.display = 'none';\n  //   document.getElementById('mailDetailsWrapper').style.display = 'none';\n  //   document.getElementById('mailSentMessage').style.display = 'none';\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Mail-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MailContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mContainerLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"IncomingMail\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Incoming Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"IncomingMailbox\",\n            children: incomingMail.length > 0 ? incomingMail.map((mail, index) => /*#__PURE__*/_jsxDEV(MailEntry, {\n              mail: mail,\n              mailType: \"incoming\",\n              onClickFunction: () => viewMail(mail, 'incoming')\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No incoming mail.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SentMail\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sent Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SentMailbox\",\n            children: sentMail.length > 0 ? sentMail.map((mail, index) => /*#__PURE__*/_jsxDEV(MailEntry, {\n              mail: mail,\n              mailType: \"sent\",\n              onClickFunction: () => viewMail(mail, 'sent')\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No incoming mail.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mContainerRight\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"CreateMailTitle\",\n          children: \"Create Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"MailForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"MailFormRecIDLabel\",\n            for: \"recId\",\n            children: \"Recipient's ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"MailFormRecIDInput\",\n            type: \"text\",\n            id: \"recId\",\n            name: \"recId\",\n            value: createdMail.recId,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"MailFormTitleLabel\",\n            for: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"MailFormTitleInput\",\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: createdMail.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"MailFormContentLabel\",\n            for: \"content\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"MailFormContentTextArea\",\n            id: \"content\",\n            name: \"content\",\n            value: createdMail.content,\n            rows: \"14\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SendMailButtonWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SendMailButton\",\n            id: \"sendEmailButton\",\n            onClick: sendMail,\n            children: \"Send Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MailPopUp, {\n      id: \"mailPopUp\",\n      studentName: \"\",\n      mail: curMail,\n      mailType: curMailType,\n      isVisible: isMailPopUpVisible,\n      closeFunction: () => closeMail()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Mail, \"x1mj8ni1FCh9ZuqtgxshcZXxlbg=\");\n_c = Mail;\nexport default Mail;\nvar _c;\n$RefreshReg$(_c, \"Mail\");","map":{"version":3,"names":["React","useState","useEffect","Children","axios","MailEntry","MailPopUp","jsxDEV","_jsxDEV","validateInput","mailData","recId","title","content","idPattern","test","Mail","_s","token","localStorage","getItem","headers","MAIL_URL","fixedRecID","initialState","createdMail","setCreatedMail","incomingMail","setIncomingMail","sentMail","setSentMail","curMail","setCurMail","curMailType","setCurMailType","isMailPopUpVisible","setMailPopUpVisible","controller","AbortController","fetchMail","mailType","response","get","signal","data","mail","error","isCancel","console","abort","handleChange","e","name","value","target","prevState","sendMail","preventDefault","validationError","alert","post","log","message","viewMail","closeMail","readMail","put","_id","isRead","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClickFunction","for","type","id","onChange","rows","onClick","studentName","isVisible","closeFunction","_c","$RefreshReg$"],"sources":["/Users/fawwazhaziq/Downloads/SEProject-v3/SEProject/frontend/src/components/Mail.js"],"sourcesContent":["import React, {useState, useEffect, Children} from 'react';\nimport axios from 'axios';\n\nimport MailEntry from './MailEntry';\nimport MailPopUp from './MailPopUp';\nimport './styling/Mail.css';\n\nconst validateInput = (mailData) => {\n  const { recId, title, content } = mailData;\n  \n  if (!recId || !title || !content) {\n    return 'All fields are required';\n  }\n\n  const idPattern = /^[0-9]+$/;\n  if (!idPattern.test(recId)) {\n    return 'Recipient ID should contain only digits';\n  }\n\n  return null;\n};\n\nconst Mail = () => {\n\n  const token = localStorage.getItem('token');\n  const headers = {};\n  if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  const MAIL_URL = '/api/mail'\n\n  const fixedRecID = \"2000313287\";\n  const initialState = {\n    recId: fixedRecID,\n    title: '',\n    content: '',\n  };\n\n  const [createdMail, setCreatedMail] = useState(initialState);\n  const [incomingMail, setIncomingMail] = useState([]);\n  const [sentMail, setSentMail] = useState([]);\n  const [curMail, setCurMail] = useState({});\n  const [curMailType, setCurMailType] = useState('');\n  const [isMailPopUpVisible, setMailPopUpVisible] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchMail = async (mailType) => {\n      try {\n        const response = await axios.get(`${MAIL_URL}/${mailType}`, {\n          signal: controller.signal,\n          headers: headers,\n        });\n        //console.log(`${mailType} mail retrieved : ${response.data.mail}`);\n        if (mailType === 'incoming') {\n          setIncomingMail(response.data.mail);\n        }\n        else {\n          setSentMail(response.data.mail);\n        }\n      } catch (error) {\n        if (axios.isCancel(error)){\n          console.error(`Fetch ${mailType} mail request cancelled`);\n        } \n        else {\n          console.error(`Error getting ${mailType} mail:` , error);\n        }\n      }\n    };\n\n    fetchMail('incoming');\n    fetchMail('sent');\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n    setCreatedMail(prevState => ({\n      ...prevState, [name]: value\n    }));\n  }\n\n  const sendMail = async (e) => {\n    e.preventDefault();\n\n    const validationError = validateInput(createdMail);\n    if (validationError) {\n      alert(validationError);\n      return;\n    }\n\n    try{\n      const response = await axios.post(`${MAIL_URL}`, createdMail, {\n        headers: headers,\n      });\n      console.log('Mail sent: ', response.data);\n      alert('Mail sent');\n      // document.getElementById('MailOverlay').style.display = 'block';\n      // document.getElementById('mailSentMessage').style.display = 'block';\n      setCreatedMail(initialState);\n    }\n    catch (error){\n      console.error('Error sending mail: ', error);\n      alert('Failed to send mail: ' + error.message);\n    }\n  }\n\n  const viewMail = (mail, mailType) => {\n    setCurMail(mail);\n    setCurMailType(mailType);\n    setMailPopUpVisible(true);\n  }\n\n  const closeMail = () => {\n    setMailPopUpVisible(false);\n\n    const readMail = async () => {\n      try {\n        const response = await axios.put(`${MAIL_URL}/${curMail._id}`, {isRead: true}, {\n          headers: headers,\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.log('Failed to update read status of mail: ' + error);\n      }\n    };\n\n    if(curMailType === 'incoming' && !curMail.isRead) {\n      readMail();\n      setCurMail(prevState => ({\n        ...prevState, isRead: true,\n      }));\n    }\n  }\n\n  // function viewMail(mail, mailType){\n  //   if (mailType === 'incoming'){\n  //     document.getElementById('mailDetailsSendRec').textContent = `Sent by ${mail.senderId}`;\n  //   } else {\n  //     document.getElementById('mailDetailsSendRec').textContent = `Sent to ${mail.recId}`;\n  //   }\n\n  //   const formattedDate = formatDate(mail.createdAt);\n  //   document.getElementById('mailDetailsDate').textContent = `Sent on ${formattedDate}`;\n  //   document.getElementById('mailDetailsTitle').textContent = `Title: ${mail.title}`;\n  //   document.getElementById('mailDetailsContent').textContent = mail.content;\n\n  //   document.getElementById('MailOverlay').style.display = 'block';\n  //   document.getElementById('mailDetailsWrapper').style.display = 'block';\n  // }\n\n  // function exitPopUp(){\n  //   document.getElementById('MailOverlay').style.display = 'none';\n  //   document.getElementById('mailDetailsWrapper').style.display = 'none';\n  //   document.getElementById('mailSentMessage').style.display = 'none';\n  // }\n\n  return (\n    <div className = \"Mail-wrapper\">\n      <div className = \"MailContainer\">\n        <div className = \"mContainerLeft\">\n          <div className = \"IncomingMail\">\n            <h3>\n              Incoming Mail\n            </h3>\n            <div className = \"IncomingMailbox\">\n              {incomingMail.length > 0 ? (\n                incomingMail.map((mail, index) => (\n                  <MailEntry \n                    key = {index} \n                    mail = {mail} \n                    mailType = 'incoming'\n                    onClickFunction = {() => viewMail(mail, 'incoming')}/>\n                ))\n              ) : (\n                <p>No incoming mail.</p>\n              )}\n            </div>\n          </div>\n          <div className = \"SentMail\">\n            <h3>\n              Sent Mail\n            </h3>\n            <div className = \"SentMailbox\">\n              {sentMail.length > 0 ? (\n                sentMail.map((mail, index) => (\n                  <MailEntry \n                    key = {index}\n                    mail = {mail} \n                    mailType = 'sent'\n                    onClickFunction = {() => viewMail(mail, 'sent')}/>\n                ))\n              ) : (\n                <p>No incoming mail.</p>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className = \"mContainerRight\">\n          <h3 className = \"CreateMailTitle\">\n            Create Mail\n          </h3>\n          <form className = 'MailForm'>\n            <label className = 'MailFormRecIDLabel' \n                    for = \"recId\">\n              Recipient's ID</label>\n            <input className = 'MailFormRecIDInput'\n                    type = \"text\" \n                    id = \"recId\" \n                    name = \"recId\"\n                    value = {createdMail.recId}\n                    onChange={handleChange}></input>\n            <label className = 'MailFormTitleLabel'\n                    for = \"title\">\n                    Title</label>\n            <input className = 'MailFormTitleInput'\n                    type = \"text\" \n                    id = \"title\" \n                    name = \"title\"\n                    value = {createdMail.title}\n                    onChange={handleChange}></input>\n            <label className = 'MailFormContentLabel'\n                    for = \"content\">Content</label>\n            <textarea className = 'MailFormContentTextArea'\n                      id = \"content\" \n                      name = \"content\"\n                      value = {createdMail.content}\n                      rows = \"14\"\n                      onChange={handleChange}></textarea>\n          </form>\n          <div className = \"SendMailButtonWrapper\">\n            <button className = \"SendMailButton\"\n                    id = \"sendEmailButton\"\n                    onClick = {sendMail}>\n              Send Mail\n            </button>\n          </div>\n\n        </div>\n      </div>\n      <MailPopUp\n        id = 'mailPopUp'\n        studentName = ''\n        mail = {curMail}\n        mailType = {curMailType}\n        isVisible = {isMailPopUpVisible}\n        closeFunction = {() => closeMail()}/>\n\n      {/* <div className = \"MailOverlay\" id = \"MailOverlay\">\n        <div className = \"PopUp\" id = \"popup\">\n          <button className = \"PopUpExitButton\"\n                  id = \"popUpExitButton\"\n                  onClick = {exitPopUp}>\n            X\n          </button>\n          <div className = \"MailDetailsWrapper\"\n                id = \"mailDetailsWrapper\">\n            <div className = \"MailDetails\">\n              <div className = \"MailDetailsHeader\">\n                <label \n                  className = \"MailDetailsSendRec\"\n                  id = \"mailDetailsSendRec\" >Mail Sent by</label>\n                <label \n                  className = \"MailDetailsDate\"\n                  id = \"mailDetailsDate\">Sent on</label>\n                <label \n                  className = \"MailDetailsTitle\"\n                  id = \"mailDetailsTitle\">Title</label>\n              </div>\n              <p className = \"MailDetailsContent\"\n                id = \"mailDetailsContent\">\n              </p>\n            </div>\n          </div>\n          <div className = \"MailSentMessage\"\n                id = \"mailSentMessage\">\n            <h1 className = \"MailSentText\">\n              Mail Sent\n            </h1>\n          </div>\n          \n          \n        </div>\n      </div> */}\n    </div>\n  )\n}\n\nexport default Mail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}