{"ast":null,"code":"var _jsxFileName = \"/Users/fawwazhaziq/Downloads/SEProject-v3/SEProject/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './styling/Login.css';\nimport ErrorModal from './ErrorModal'; // Import ErrorModal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [error, setError] = useState(null);\n  const [isErrorModalOpen, setIsErrorModalOpen] = useState(false); // Add state for ErrorModal\n  const navigate = useNavigate();\n  const handleSendCode = async () => {\n    try {\n      const response = await axios.post('/api/verification/send-code', {\n        email\n      });\n      alert(response.data.message);\n      setIsCodeSent(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error sending code:', error);\n      setError('Failed to send code: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n      setIsErrorModalOpen(true); // Show ErrorModal\n    }\n  };\n  const handleVerifyCode = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/verification/verify-code', {\n        email,\n        code: verificationCode\n      });\n      if (response.data.message === 'Verification successful.') {\n        localStorage.setItem('email', email); // Store email or token as needed\n        navigate('/user-dashboard');\n      } else {\n        throw new Error(response.data.message);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error verifying code:', error);\n      setError('Failed to verify code: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n      setIsErrorModalOpen(true); // Show ErrorModal\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-h1\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), !isCodeSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"login-label login-left\",\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            onClick: handleSendCode,\n            children: \"Send Verification Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login-form\",\n          onSubmit: handleVerifyCode,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"login-label login-left\",\n              htmlFor: \"verificationCode\",\n              children: \"Verification Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"verificationCode\",\n              name: \"verificationCode\",\n              placeholder: \"Enter the code sent to your email\",\n              value: verificationCode,\n              onChange: e => setVerificationCode(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            type: \"submit\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"login-p\",\n            children: [\"New? \", /*#__PURE__*/_jsxDEV(Link, {\n              className: \"login-a\",\n              to: \"/signup\",\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n          isOpen: isErrorModalOpen,\n          message: error,\n          onClose: () => setIsErrorModalOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"1Ba1nWX71P/DuWhCvChdjx9OrX0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","axios","ErrorModal","jsxDEV","_jsxDEV","Login","_s","email","setEmail","verificationCode","setVerificationCode","isCodeSent","setIsCodeSent","error","setError","isErrorModalOpen","setIsErrorModalOpen","navigate","handleSendCode","response","post","alert","data","message","_error$response","_error$response$data","console","handleVerifyCode","e","preventDefault","code","localStorage","setItem","Error","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","placeholder","value","onChange","target","required","onClick","onSubmit","to","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/fawwazhaziq/Downloads/SEProject-v3/SEProject/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './styling/Login.css';\nimport ErrorModal from './ErrorModal'; // Import ErrorModal\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [error, setError] = useState(null);\n  const [isErrorModalOpen, setIsErrorModalOpen] = useState(false); // Add state for ErrorModal\n  const navigate = useNavigate();\n\n  const handleSendCode = async () => {\n    try {\n      const response = await axios.post('/api/verification/send-code', { email });\n      alert(response.data.message);\n      setIsCodeSent(true);\n    } catch (error) {\n      console.error('Error sending code:', error);\n      setError('Failed to send code: ' + (error.response?.data?.message || error.message));\n      setIsErrorModalOpen(true); // Show ErrorModal\n    }\n  };\n\n  const handleVerifyCode = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post('/api/verification/verify-code', { email, code: verificationCode });\n\n      if (response.data.message === 'Verification successful.') {\n        localStorage.setItem('email', email); // Store email or token as needed\n        navigate('/user-dashboard');\n      } else {\n        throw new Error(response.data.message);\n      }\n    } catch (error) {\n      console.error('Error verifying code:', error);\n      setError('Failed to verify code: ' + (error.response?.data?.message || error.message));\n      setIsErrorModalOpen(true); // Show ErrorModal\n    }\n  };\n\n  return (\n    <div className='Login-wrapper'>\n      <div className='Login-body'>\n        <div className=\"login-container\">\n          <h1 className='login-h1'>Login</h1>\n          {!isCodeSent ? (\n            <div className=\"login-form-group\">\n              <label className='login-label login-left' htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n              <button className='login-button' onClick={handleSendCode}>Send Verification Code</button>\n            </div>\n          ) : (\n            <form className='login-form' onSubmit={handleVerifyCode}>\n              <div className=\"login-form-group\">\n                <label className='login-label login-left' htmlFor=\"verificationCode\">Verification Code</label>\n                <input\n                  type=\"text\"\n                  id=\"verificationCode\"\n                  name=\"verificationCode\"\n                  placeholder=\"Enter the code sent to your email\"\n                  value={verificationCode}\n                  onChange={(e) => setVerificationCode(e.target.value)}\n                  required\n                />\n              </div>\n              <button className='login-button' type=\"submit\">Log In</button>\n            </form>\n          )}\n          <center><p className='login-p'>New? <Link className='login-a' to=\"/signup\">Create Account</Link></p></center>\n          {error && <ErrorModal isOpen={isErrorModalOpen} message={error} onClose={() => setIsErrorModalOpen(false)} />} {/* Use ErrorModal */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}