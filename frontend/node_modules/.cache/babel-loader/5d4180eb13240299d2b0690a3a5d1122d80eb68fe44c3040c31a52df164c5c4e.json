{"ast":null,"code":"var _jsxFileName = \"/Users/fawwazhaziq/Downloads/SEProject-v3/SEProject/frontend/src/components/StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styling/StudentDashboard.css';\nimport './MailEntry';\nimport MailEntry from './MailEntry';\nimport ReportEntry from './ReportEntry';\nimport ReportPopUp from './ReportPopUp';\nimport MailPopUp from './MailPopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const token = localStorage.getItem('token');\n  const headers = {};\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  const MAIL_URL = '/api/mail';\n  const REPORT_URL = '/api/reports';\n  const NOTE_URL = '/api/notes';\n  const USER_URL = '/api/users';\n  const fixedStudentID = \"2022313287\";\n  const [user, setUser] = useState({});\n  const [note, setNote] = useState('');\n  const [mail, setMail] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [curReport, setCurReport] = useState({});\n  const [curMail, setCurMail] = useState({});\n  const [isReportPopUpVisible, setReportPopUpVisible] = useState(false);\n  const [isMailPopUpVisible, setMailPopUpVisible] = useState(false);\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchUser = async () => {\n      try {\n        const response = await axios.get(`${USER_URL}/me`, {\n          signal: controller.signal,\n          headers: headers\n        });\n        setUser(response.data.user);\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.error(`Fetch reports request cancelled`);\n        } else {\n          console.error(`Error getting mail:`, error);\n        }\n      }\n    };\n    const fetchMail = async () => {\n      try {\n        const response = await axios.get(`${MAIL_URL}/incoming`, {\n          signal: controller.signal,\n          headers: headers\n        });\n        setMail(response.data.mail);\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.error(`Fetch mail request cancelled`);\n        } else {\n          console.error(`Error getting mail:`, error);\n        }\n      }\n    };\n    const fetchReports = async () => {\n      try {\n        const response = await axios.get(`${REPORT_URL}`, {\n          signal: controller.signal,\n          headers: headers\n        });\n        setReports(response.data.reports);\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.error(`Fetch reports request cancelled`);\n        } else {\n          console.error(`Error getting reports:`, error);\n        }\n      }\n    };\n    const fetchNote = async () => {\n      try {\n        const response = await axios.get(`${NOTE_URL}`, {\n          signal: controller.signal,\n          headers: headers\n        });\n        setNote(response.data.note || '');\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.error(`Fetch note request cancelled`);\n        } else {\n          console.error(`Error getting note:`, error);\n        }\n      }\n    };\n    fetchUser();\n    fetchMail();\n    fetchReports();\n    fetchNote();\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  const handleChange = e => {\n    setNote(e.target.value);\n  };\n  const handleSave = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(NOTE_URL, {\n        note\n      }, {\n        headers: headers\n      });\n      //console.log('Note saved:', response.data);\n      alert('Note saved');\n    } catch (error) {\n      //console.error('Error saving:', error);\n      alert('Failed to save note: ' + error.message);\n    }\n  };\n  const viewMail = mail => {\n    setCurMail(mail);\n    setMailPopUpVisible(true);\n  };\n  const closeMail = () => {\n    setMailPopUpVisible(false);\n    const readMail = async () => {\n      try {\n        const response = await axios.put(`${MAIL_URL}/${curMail._id}`, {\n          isRead: true\n        }, {\n          headers: headers\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.log('Failed to update read status of mail: ' + error);\n      }\n    };\n    if (!curMail.isRead) {\n      readMail();\n      setCurMail(prevState => ({\n        ...prevState,\n        isRead: true\n      }));\n    }\n  };\n  const viewReport = report => {\n    //console.log(report.file ? true : false);\n    setCurReport(report);\n    setReportPopUpVisible(true);\n  };\n  const closeReport = () => {\n    setReportPopUpVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"studentDashboard-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"studentDashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome To Lab Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"studentDashboard-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"studentDashboard-container single\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"studentDashboard-box incoming\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Unread Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"studentDashboard-button-list\",\n              children: mail.length > 0 ? mail.filter(currentMail => !currentMail.isRead).map((currentMail, index) => /*#__PURE__*/_jsxDEV(MailEntry, {\n                mail: currentMail,\n                mailType: \"incoming\",\n                onClickFunction: () => viewMail(currentMail)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No incoming mail.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"studentDashboard-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"studentDashboard-box half\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Submitted Progress Reports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"studentDashboard-button-list\",\n              children: reports.length > 0 ? reports.map((report, index) => /*#__PURE__*/_jsxDEV(ReportEntry, {\n                className: \"reportEntries\",\n                report: report,\n                onClickFunction: () => viewReport(report)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No reports.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"studentDashboard-box half\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Personal Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"studentDashboard-noteForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"noteText\",\n                name: \"text\",\n                value: note.text,\n                rows: \"4\",\n                cols: \"50\",\n                placeholder: \"Enter your notes here...\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSave,\n                children: \"Save Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(ReportPopUp, {\n        id: \"reportPopUp\",\n        studentName: \"\",\n        report: curReport,\n        isVisible: isReportPopUpVisible,\n        closeFunction: () => closeReport()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(MailPopUp, {\n        id: \"mailPopUp\",\n        studentName: \"\",\n        mail: curMail,\n        mailType: \"incoming\",\n        isVisible: isMailPopUpVisible,\n        closeFunction: () => closeMail()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 3\n  }, this);\n};\n_s(StudentDashboard, \"ATzZ/h+Ed+gVwsZ98+B1PvUX7iA=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","MailEntry","ReportEntry","ReportPopUp","MailPopUp","jsxDEV","_jsxDEV","StudentDashboard","_s","token","localStorage","getItem","headers","MAIL_URL","REPORT_URL","NOTE_URL","USER_URL","fixedStudentID","user","setUser","note","setNote","mail","setMail","reports","setReports","curReport","setCurReport","curMail","setCurMail","isReportPopUpVisible","setReportPopUpVisible","isMailPopUpVisible","setMailPopUpVisible","controller","AbortController","fetchUser","response","get","signal","data","error","isCancel","console","fetchMail","fetchReports","fetchNote","abort","handleChange","e","target","value","handleSave","preventDefault","put","alert","message","viewMail","closeMail","readMail","_id","isRead","log","prevState","viewReport","report","closeReport","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","name","length","filter","currentMail","map","index","mailType","onClickFunction","id","text","rows","cols","placeholder","onChange","onClick","studentName","isVisible","closeFunction","_c","$RefreshReg$"],"sources":["/Users/fawwazhaziq/Downloads/SEProject-v3/SEProject/frontend/src/components/StudentDashboard.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './styling/StudentDashboard.css';\nimport './MailEntry'\nimport MailEntry from './MailEntry';\nimport ReportEntry from './ReportEntry';\nimport ReportPopUp from './ReportPopUp';\nimport MailPopUp from './MailPopUp';\n\nconst StudentDashboard = () => {\n  const token = localStorage.getItem('token');\n\n  const headers = {};\n  if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  const MAIL_URL = '/api/mail';\n  const REPORT_URL = '/api/reports';\n  const NOTE_URL = '/api/notes';\n  const USER_URL = '/api/users';\n  const fixedStudentID = \"2022313287\";\n  \n  const [user, setUser] = useState({});\n  const [note, setNote] = useState('');\n  const [mail, setMail] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [curReport, setCurReport] = useState({});\n  const [curMail, setCurMail] = useState({});\n  const [isReportPopUpVisible, setReportPopUpVisible] = useState(false);\n  const [isMailPopUpVisible, setMailPopUpVisible] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchUser = async () => {\n        try {\n            const response = await axios.get(`${USER_URL}/me`, {\n                signal: controller.signal,\n                headers: headers,\n            });\n            setUser(response.data.user);\n        } catch (error) {\n            if (axios.isCancel(error)) {\n                console.error(`Fetch reports request cancelled`);\n            }\n            else {\n                console.error(`Error getting mail:` , error);\n            }\n        }\n    }; \n\n    const fetchMail = async () => {\n        try {\n            const response = await axios.get(`${MAIL_URL}/incoming`, {\n                signal: controller.signal,\n                headers: headers,\n            });\n            setMail(response.data.mail);\n        } catch (error) {\n            if (axios.isCancel(error)) {\n                console.error(`Fetch mail request cancelled`);\n            }\n            else {\n                console.error(`Error getting mail:` , error);\n            }\n        }\n    }; \n\n    const fetchReports = async () => {\n        try {\n            const response = await axios.get(`${REPORT_URL}`, {\n                signal: controller.signal,\n                headers: headers,\n            });\n            setReports(response.data.reports);\n        } catch (error) {\n            if (axios.isCancel(error)) {\n                console.error(`Fetch reports request cancelled`);\n            }\n            else {\n                console.error(`Error getting reports:` , error);\n            }\n        }\n    };\n\n    const fetchNote = async () => {\n        try {\n            const response = await axios.get(`${NOTE_URL}`, {\n                signal: controller.signal,\n                headers: headers,\n            });\n            setNote(response.data.note || '');\n        } catch (error) {\n            if (axios.isCancel(error)) {\n                console.error(`Fetch note request cancelled`);\n            }\n            else {\n                console.error(`Error getting note:` , error);\n            }\n        }\n    }\n\n    fetchUser();\n    fetchMail();\n    fetchReports();\n    fetchNote();\n\n    return () => {\n        controller.abort();\n    };\n  }, []);\n\n\n  const handleChange = (e) => {\n      setNote(e.target.value);\n  };\n\n  const handleSave = async (e) => {\n      e.preventDefault();\n      try {\n          const response = await axios.put(NOTE_URL, {note}, {\n              headers: headers,\n          });\n          //console.log('Note saved:', response.data);\n          alert('Note saved');\n      } catch (error) {\n          //console.error('Error saving:', error);\n          alert('Failed to save note: ' + error.message);\n      }\n  };\n\n  const viewMail = (mail) => {\n    setCurMail(mail);\n    setMailPopUpVisible(true);\n  }\n\n  const closeMail = () => {\n    setMailPopUpVisible(false);\n\n    const readMail = async () => {\n      try {\n        const response = await axios.put(`${MAIL_URL}/${curMail._id}`, {isRead: true}, {\n          headers: headers,\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.log('Failed to update read status of mail: ' + error);\n      }\n    };\n\n    if(!curMail.isRead) {\n      readMail();\n      setCurMail(prevState => ({\n        ...prevState, isRead: true,\n      }));\n    }\n  }\n\n  const viewReport = (report) => {\n      //console.log(report.file ? true : false);\n      setCurReport(report);\n      setReportPopUpVisible(true);\n  };\n\n  const closeReport = () => {\n      setReportPopUpVisible(false);\n  };\n  \nreturn (\n  <div className = \"studentDashboard-wrapper\">\n<body>\n  <div class=\"studentDashboard-header\">\n      <h1>Welcome To Lab Name</h1>\n      <h2>{user.name}</h2>\n  </div>\n  <div class=\"studentDashboard-panel\">\n      <div class=\"studentDashboard-container single\">\n          <div class=\"studentDashboard-box incoming\">\n              <h3>Unread Mail</h3>\n              <div class=\"studentDashboard-button-list\">\n                  {mail.length > 0 ? (\n                      mail\n                      .filter(currentMail => !currentMail.isRead)\n                      .map((currentMail, index) => (\n                      <MailEntry \n                          key = {index}\n                          mail = {currentMail} \n                          mailType = 'incoming'\n                          onClickFunction = {() => viewMail(currentMail)}/>\n                          ))\n                      ) : (\n                          <p>No incoming mail.</p>\n                  )}\n              </div>\n          </div>\n      </div>\n      <div class=\"studentDashboard-container\">\n          <div class=\"studentDashboard-box half\">\n              <h3>Submitted Progress Reports</h3>\n              <div class=\"studentDashboard-button-list\">\n                  {reports.length > 0 ? (\n                      reports.map((report, index) => (\n                      <ReportEntry\n                          className = \"reportEntries\"\n                          key = {index}\n                          report = {report} \n                          onClickFunction = {() => viewReport(report)}/>\n                          ))\n                      ) : (\n                          <p>No reports.</p>\n                  )}\n              </div>\n          </div>\n          <div class=\"studentDashboard-box half\">\n              <h3>Personal Notes</h3>\n              <form id=\"studentDashboard-noteForm\">\n                  <textarea \n                      id=\"noteText\"\n                      name='text'\n                      value = {note.text} \n                      rows=\"4\" \n                      cols=\"50\" \n                      placeholder=\"Enter your notes here...\"\n                      onChange = {handleChange}>\n                  </textarea>\n                  <button \n                      onClick = {handleSave}>Save Note</button>\n              </form>\n          </div>\n      </div>\n  </div>\n  <ReportPopUp \n      id = 'reportPopUp'\n      studentName = ''\n      report = {curReport}\n      isVisible = {isReportPopUpVisible} \n      closeFunction = {() => closeReport()}/>\n  <MailPopUp\n      id = 'mailPopUp'\n      studentName = ''\n      mail = {curMail}\n      mailType = 'incoming'\n      isVisible = {isMailPopUpVisible}\n      closeFunction = {() => closeMail()}/>\n</body>\n    </div>\n  )\n}\n\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}