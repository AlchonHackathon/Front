{"ast":null,"code":"var _jsxFileName = \"/Users/fawwazhaziq/Downloads/SEProject-v3/SEProject/frontend/src/components/UserHeader.js\";\nimport React from 'react';\nimport { Routes, Route, Link, Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { currentLinkAction } from '../actions';\nimport './styling/header.css';\nimport home from '../icons/home.png';\nimport nft from '../icons/nft.png';\nimport Sidebar from './Sidebar';\n\n// Importing components\nimport UserDashboard from './UserDashboard';\nimport UserTransfer from './UserTransfer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserHeader extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.updateDLinkState = () => {\n      console.log('Updating link state to User-dashboard');\n      this.props.currentLinkAction('user-dashboard');\n    };\n    this.updateTLinkState = () => {\n      console.log('Updating link state to User-transfer');\n      this.props.currentLinkAction('user-transfer');\n    };\n    this.getTitle = () => {\n      const {\n        currentLinkState\n      } = this.props;\n      const titles = {\n        'User-dashboard': 'Dashboard',\n        'User-transfer': 'Transfer Tokens'\n      };\n      return titles[currentLinkState] || 'Dashboard';\n    };\n  }\n  componentDidMount() {\n    const path = window.location.pathname;\n    const route = path.split('/').pop();\n    console.log('Current route:', route);\n    const routeActionMap = {\n      'user-dashboard': this.updateDLinkState,\n      'user-transfer': this.updateTLinkState\n    };\n    if (routeActionMap[route]) {\n      console.log('Updating link state for route:', route);\n      routeActionMap[route]();\n    } else {\n      console.log('No matching route found for:', route);\n    }\n  }\n  render() {\n    console.log('Rendering UserHeader with current link state:', this.props.currentLinkState);\n    console.log('tokenlogo path:', nft); // Log the image source\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topbar\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"rtb-title\",\n          children: this.getTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottomContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setIsSidebarOpen(!isSidebarOpen)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n            updateDLinkState: this.updateDLinkState,\n            updateTLinkState: this.updateTLinkState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/user-dashboard\",\n              element: /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/user-transfer\",\n              element: /*#__PURE__*/_jsxDEV(UserTransfer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    currentLinkState: state.currentLinkState\n  };\n};\nexport default connect(mapStateToProps, {\n  currentLinkAction\n})(UserHeader);","map":{"version":3,"names":["React","Routes","Route","Link","Navigate","connect","currentLinkAction","home","nft","Sidebar","UserDashboard","UserTransfer","jsxDEV","_jsxDEV","UserHeader","Component","constructor","args","updateDLinkState","console","log","props","updateTLinkState","getTitle","currentLinkState","titles","componentDidMount","path","window","location","pathname","route","split","pop","routeActionMap","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setIsSidebarOpen","isSidebarOpen","element","mapStateToProps","state"],"sources":["/Users/fawwazhaziq/Downloads/SEProject-v3/SEProject/frontend/src/components/UserHeader.js"],"sourcesContent":["import React from 'react';\nimport { Routes, Route, Link, Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { currentLinkAction } from '../actions';\nimport './styling/header.css';\nimport home from '../icons/home.png';\nimport nft from '../icons/nft.png';\nimport Sidebar from './Sidebar'\n\n// Importing components\nimport UserDashboard from './UserDashboard';\nimport UserTransfer from './UserTransfer';\n\nclass UserHeader extends React.Component {\n\n  componentDidMount() {\n    const path = window.location.pathname;\n    const route = path.split('/').pop();\n    console.log('Current route:', route);\n    const routeActionMap = {\n      'user-dashboard': this.updateDLinkState,\n      'user-transfer': this.updateTLinkState,\n    };\n\n    if (routeActionMap[route]) {\n      console.log('Updating link state for route:', route);\n      routeActionMap[route]();\n    } else {\n      console.log('No matching route found for:', route);\n    }\n  }\n\n  updateDLinkState = () => {\n    console.log('Updating link state to User-dashboard');\n    this.props.currentLinkAction('user-dashboard');\n  }\n\n  updateTLinkState = () => {\n    console.log('Updating link state to User-transfer');\n    this.props.currentLinkAction('user-transfer');\n  }\n\n  getTitle = () => {\n    const { currentLinkState } = this.props;\n    const titles = {\n      'User-dashboard': 'Dashboard',\n      'User-transfer': 'Transfer Tokens',\n    };\n    return titles[currentLinkState] || 'Dashboard';\n  }\n\n  render() {\n    console.log('Rendering UserHeader with current link state:', this.props.currentLinkState);\n    console.log('tokenlogo path:', nft); // Log the image source\n\n    return (\n      <div className=\"header-wrapper\">\n        <div className=\"topbar\">\n          <p className=\"rtb-title\">\n            {this.getTitle()}\n          </p>\n        </div>\n\n        <div className=\"bottomContent\">\n          <div className=\"sidebar\">\n            <button onClick={setIsSidebarOpen(!isSidebarOpen)}></button>\n            <Sidebar\n              updateDLinkState={this.updateDLinkState}\n              updateTLinkState={this.updateTLinkState}\n            />\n          </div>\n          <div className=\"main\">\n            <Routes>\n              <Route path=\"/user-dashboard\" element={<UserDashboard />} />\n              <Route path=\"/user-transfer\" element={<UserTransfer />} />\n            </Routes>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { currentLinkState: state.currentLinkState };\n}\n\nexport default connect(mapStateToProps, { currentLinkAction })(UserHeader);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}